using System;
using Xunit;

namespace NickBuhro.Exercises.ProjectEuler
{
    /// <summary>
    /// Even Fibonacci numbers
    /// 
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    /// By starting with 1 and 2, the first 10 terms will be:
    ///
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    ///
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    /// find the sum of the even-valued terms.
    /// 
    /// <seealso href="https://projecteuler.net/problem=2"/>
    /// </summary>
    public sealed class Problem002
    {
        [Theory]
        [InlineData(10L, 10L)]
        [InlineData(4000000L, 4613732L)]
        public void Test(long limit, long expectedResult)
        {
            var actual = GetFastAnswer(limit);
            Assert.Equal(expectedResult, actual);
        }

        public static long GetAnswer(long limit = 4000000L)
        {
            long result = 0;

            long prev = 1;
            long current = 1;

            while (current < limit)
            {
                if ((current & 1) == 0)
                {
                    result += current;
                }

                var c = current;
                current += prev;
                prev = c;
            }

            return result;
        }


        public static long GetFastAnswer(long limit = 4000000L)
        {
            long result = 0;

            long prev = 1;
            long current = 2;

            // Iterate only every 3-th term of Fibonacci sequence
            while (current < limit)
            {
                result += current;

                var c = current;
                var p = prev;

                prev = 2*c + p;
                current = 3*c + 2*p;
            }

            return result;
        }
    }
}
